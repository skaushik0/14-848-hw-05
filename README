hw-05
-----
This repository contains the source for 14-848: HW-05 ("Inverted Index")
homework.


SUMMARY

    The driver script "search.py" builds an inverted index of a given
    set of documents (accepts "tar.gz" files) with Apache Spark using
    the "pyspark" interface library. The inverted index is created by
    utilizing "RDDs" (resilient distributed datasets) with a series of
    Spark "map" and "reduce" calls. After the index is constructed, the
    scripts accepts a set of terms, or a numeric value to search for
    the given terms, or the top "N" terms as specified.

    The usage of "search.py" is as follows:

        $ ./search.py
        Search for a word or top 'N' terms in a given set of documents.

        USAGE

           search.py   (N | TERM-1[, TERM-2, [..., TERM-N]]) PATH

        ARGUMENTS

           (N | TERM)  If the argument is a number, then search for the
                       top 'N' terms; otherwise, search for one (or more)
                       word (or comma-separated list of words); list term
                       frequency in the documents for both cases.

           PATH        The path of documents to search from.


HOW-TO

    The driver script runs inside the "mcr.microsoft.com/mmlspark/release"
    which comes bundled with Apache Spark. For example, to search for all
    the terms "king" and "war" for the documents in the "data" directory,
    run:

        $ make search ARG="king,war"

    ... the above command will list the total number of times each of the
    words appear in all of the documents, and also document-wise break-up
    of the word frequency of each of the terms.

    To get the top 5 terms, run:

        $ make search ARG="5"

    ... the above command will list the top 5 frequent terms in all of
    the uploaded documents, as well as return the document-wise break-up
    of the terms, similar to term search.


STRUCTURE

    - search.py
        The driver script that constructs inverted indices and runs
        queries against them. Please refer to the source file for more
        documentation.

    - Makefile
        Helper script to copy the data and running the driver script
        in the Docker container.

    - data/*.tar.gz
        Test data-set from "14-848: Project Option II", unzipped from
        the "Data.zip" file for convenience.

    - out/*.txt
        The output of a few search results run against the script. All of
        these are generated by running:

            $ make test
